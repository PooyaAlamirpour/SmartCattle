@using SmartCattle.DomainClass
@model IEnumerable<Sensor>
@{
    ViewBag.Title = Localization.getString("Sensor_Management");
}

<div class="row">
    <div class="col-xs-12 col-md-12">
        <div class="widget">
            <div class="widget-header ">
                <span class="widget-caption">@Localization.getString("Sensor_List")</span>
                <div class="widget-buttons">
                    <a href="#" data-toggle="dispose">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="widget-body">
                <div class="table-toolbar">
                    <a id="editabledatatable_new" href="javascript:void(0);" class="btn btn-default">
                        @Localization.getString("New_Sensor")
                    </a>
                    <div class="btn-group pull-right">
                        @*<a class="btn btn-default" href="javascript:void(0);">Tools</a>
                            <a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="javascript:void(0);"><i class="fa fa-angle-down"></i></a>*@
                        @*<ul class="dropdown-menu dropdown-default">
                                <li>
                                    <a href="javascript:void(0);">Action</a>
                                </li>
                                <li>
                                    <a href="javascript:void(0);">Another action</a>
                                </li>
                                <li>
                                    <a href="javascript:void(0);">Something else here</a>
                                </li>
                                <li class="divider"></li>
                                <li>
                                    <a href="javascript:void(0);">Separated link</a>
                                </li>
                            </ul>*@
                    </div>
                </div>
                <table class="table table-striped table-hover table-bordered" id="editabledatatable">
                    <thead>
                        <tr role="row">
                            <th>
                                @Localization.getString("Mac_Address")
                            </th>
                            <th>
                                @Localization.getString("Software_Version")
                            </th>
                            <th>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td class="roleName">@item.MacAddress</td>
                                    <td class="roleDesc">@item.softwareVersion</td>
                                    <td>
                                        <a href="#" data-id="@item.ID" class="btn btn-info btn-xs edit"><i class="fa fa-edit"></i> @Localization.getString("Edit")</a>
                                        <a href="#" data-id="@item.ID" class="btn btn-danger btn-xs delete"><i class="fa fa-trash-o"></i>@Localization.getString("Delete") </a>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>



<!--End Email Templates-->
<!--Success Modal Templates-->
<div id="modal-success" class="modal modal-message modal-success fade" style="display: none;" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <i class="glyphicon glyphicon-check"></i>
            </div>
            <div class="modal-title">Success</div>
            <div class="modal-body">You have done great!</div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal">OK</button>
            </div>
        </div> <!-- / .modal-content -->
    </div> <!-- / .modal-dialog -->
</div>
<!--End Success Modal Templates-->
<!--Info Modal Templates-->
<div id="modal-info" class="modal modal-message modal-info fade" style="display: none;" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <i class="fa fa-envelope"></i>
            </div>
            <div class="modal-title">Alert</div>
            <div class="modal-body">You'vd got mail!</div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" data-dismiss="modal">OK</button>
            </div>
        </div> <!-- / .modal-content -->
    </div> <!-- / .modal-dialog -->
</div>
<!--End Info Modal Templates-->
<!--Danger Modal Templates-->
<div id="modal-danger" class="modal modal-message modal-danger fade" style="display: none;" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <i class="glyphicon glyphicon-fire"></i>
            </div>
            <div class="modal-title">Alert</div>
            <div class="modal-body">You'vd done bad!</div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">OK</button>
            </div>
        </div> <!-- / .modal-content -->
    </div> <!-- / .modal-dialog -->
</div>
<!--End Danger Modal Templates-->
<!--Danger Modal Templates-->
<div id="modal-warning" class="modal modal-message modal-warning fade" style="display: none;" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <i class="fa fa-warning"></i>
            </div>
            <div class="modal-title">Warning</div>
            <div class="modal-body">Is something wrong?</div>
            <div class="modal-footer">
                <button type="button" class="btn btn-warning" data-dismiss="modal">OK</button>
            </div>
        </div> <!-- / .modal-content -->
    </div> <!-- / .modal-dialog -->
</div>
<!--End Danger Modal Templates-->

@section PageScripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link href="~/assets/css/dataTables.bootstrap.css" rel="stylesheet" />
    <script src="~/assets/js/datatable/jquery.dataTables.min.js"></script>
    <script src="~/assets/js/datatable/ZeroClipboard.js"></script>
    <script src="~/assets/js/datatable/dataTables.tableTools.min.js"></script>
    <script src="~/assets/js/datatable/dataTables.bootstrap.min.js"></script>

    <script>
        var InitiateEditableDataTable = function() {
    return {
        init: function() {
            //Datatable Initiating
            var oTable = $('#editabledatatable').dataTable({
                "aLengthMenu": [
                    [5, 15, 20, 100, -1],
                    [5, 15, 20, 100, "All"]
                ],
                "iDisplayLength": 5,
                "sPaginationType": "bootstrap",
                "sDom": "Tflt<'row DTTTFooter'<'col-sm-6'i><'col-sm-6'p>>",
                "oTableTools": {
                    "aButtons": [
                        "print"
                    ]
                },
                "language": {
                    "search": "",
                    "sLengthMenu": "_MENU_",
                    "oPaginate": {
                        "sPrevious": "Prev",
                        "sNext": "Next"
                    }
                },
                "aoColumns": [
                    null,
                    null,
                    { "bSortable": false }
                ]
            });

            var isEditing = null;

            //Add New Row
            $('#editabledatatable_new').click(function(e) {
                e.preventDefault();
                var aiNew = oTable.fnAddData([
                    '', '','', '',
                    '<a href="#" class="btn btn-success btn-xs save"><i class="fa fa-edit"></i> @Localization.getString("Save")</a> <a href="#" class="btn btn-warning btn-xs cancel" data-mode="new"><i class="fa fa-times"></i> Cancel</a>'
                ]);
                var nRow = oTable.fnGetNodes(aiNew[0]);
                editAddedRow(oTable, nRow);
                isEditing = nRow;
            });

            //Delete an Existing Row
            $('#editabledatatable').on("click", 'a.delete', function(e) {
                e.preventDefault();
                var mustbeDelete = false;
                if (confirm("Are You Sure To Delete This Row?") == false) {
                    return;
                }
                $.ajax({
                    url: '@Url.Action("DeleteSensor", "Sensor")',
                    type: "POST",
                    async:false,
                    data: { "sensorId": $(this).data("id") },
                    success: function (result) {
                        var jsonData = JSON.stringify(result);
                        var data = JSON.parse(jsonData);
                        console.log(data.type);
                        if (data.type == 0)//zero equal to success
                        {
                            //deleted
                            mustbeDelete = true;
                        }
                    },
                    error: function (xhr, response) {
                        $("#errorbtn").trigger("click");
                        alert("error in delete row !");
                    }
                });
                if (mustbeDelete) {
                    var nRow = $(this).parents('tr')[0];
                    oTable.fnDeleteRow(nRow);
                }
            });

            //Cancel Editing or Adding a Row
            $('#editabledatatable').on("click", 'a.cancel', function(e) {
                e.preventDefault();
                if ($(this).attr("data-mode") == "new") {
                    var nRow = $(this).parents('tr')[0];
                    oTable.fnDeleteRow(nRow);
                    isEditing = null;
                } else {
                    restoreRow(oTable, isEditing);
                    isEditing = null;
                }
            });

            //Edit A Row
            $('#editabledatatable').on("click", 'a.edit', function(e) {
                e.preventDefault();

                var nRow = $(this).parents('tr')[0];

                if (isEditing !== null && isEditing != nRow) {
                    restoreRow(oTable, isEditing);
                    editRow(oTable, nRow, $(this).data("id"));
                    isEditing = nRow;
                } else {
                    editRow(oTable, nRow, $(this).data("id"));
                    isEditing = nRow;
                }
            });

            //Save an Editing Row
            $('#editabledatatable').on("click", 'a.save', function(e) {
                e.preventDefault();
                var dis = $(this);
                if (this.innerHTML.indexOf(0<="@Localization.getString("Save")")) {
                    var jqInputs = $('input', isEditing);
                    var MAC = $(jqInputs[0]).val();
                    var Vesrion = $(jqInputs[1]).val();
                    var id = $(this).data("id");
                    var newid;

                    $.ajax({
                        url: '@Url.Action("CreateSensor", "Sensor")',
                        type: 'POST',
                        async:false,
                        data: { "SensorId": $(this).data("id"), "macAddress": MAC, "softwareVersion": Vesrion },
                        success: function (result) {
                            var jsonData = JSON.stringify(result);
                            var data = JSON.parse(jsonData);
                            if (data.type == 0)//zero equal to sucess
                            {
                                newid = data.value;
                                saveRow(oTable, isEditing, newid);
                                isEditing = null;
                            }
                        },
                        error: function (xhr, response) {
                            if ($(dis).attr("data-mode") == "new") {
                                var nRow = $(this).parents('tr')[0];
                                oTable.fnDeleteRow(nRow);
                                isEditing = null;
                            } else {
                                restoreRow(oTable, isEditing);
                                isEditing = null;
                            }
                           alert("update Row failed !")
                        }
                    });

                    //Some Code to Highlight Updated Row
                }
            });


            function restoreRow(oTable, nRow) {
                var aData = oTable.fnGetData(nRow);
                var jqTds = $('>td', nRow);

                for (var i = 0, iLen = jqTds.length; i < iLen; i++) {
                    oTable.fnUpdate(aData[i], nRow, i, false);
                }

                oTable.fnDraw();
            }

            function editRow(oTable, nRow,dataId) {
                var aData = oTable.fnGetData(nRow);
                var jqTds = $('>td', nRow);
                jqTds[0].innerHTML = '<input type="text" class="form-control input-small roleName" value="' + aData[0] + '">';
                jqTds[1].innerHTML = '<input type="text" class="form-control input-small roleDesc" value="' + aData[1] + '">';
                jqTds[2].innerHTML = '<a href="#" data-id='+dataId+' class="btn btn-success btn-xs save"><i class="fa fa-save"></i>@Localization.getString("Save")</a> <a href="#" class="btn btn-warning btn-xs cancel"><i class="fa fa-times"></i> Cancel</a>';
            }

            function editAddedRow(oTable, nRow) {
                var aData = oTable.fnGetData(nRow);
                var jqTds = $('>td', nRow);
                jqTds[0].innerHTML = '<input type="text" class="form-control input-small roleName" value="' + aData[0] + '">';
                jqTds[1].innerHTML = '<input type="text" class="form-control input-small roleDesc" value="' + aData[1] + '">';
                jqTds[2].innerHTML = aData[4];
            }

            function saveRow(oTable, nRow , newId) {
                var jqInputs = $('input', nRow);
                oTable.fnUpdate(jqInputs[0].value, nRow, 0, false);
                oTable.fnUpdate(jqInputs[1].value, nRow, 1, false);
                oTable.fnUpdate('<a href="#" data-id=' + newId + ' class="btn btn-info btn-xs edit"><i class="fa fa-edit"></i> @Localization.getString("Edit")</a> <a href="#" data-id=' + newId + ' class="btn btn-danger btn-xs delete"><i class="fa fa-trash-o"></i>@Localization.getString("Delete")</a>', nRow, 2, false);
                oTable.fnDraw();
            }

            function cancelEditRow(oTable, nRow) {
                var jqInputs = $('input', nRow);
                oTable.fnUpdate(jqInputs[0].value, nRow, 0, false);
                oTable.fnUpdate(jqInputs[1].value, nRow, 1, false);
                oTable.fnUpdate('<a href="#" class="btn btn-info btn-xs edit"><i class="fa fa-edit"></i> @Localization.getString("Edit")</a> <a href="#" class="btn btn-danger btn-xs delete"><i class="fa fa-trash-o"></i> @Localization.getString("Delete")</a>', nRow, 2, false);
                oTable.fnDraw();
            }
        }

    };
        }();
        InitiateEditableDataTable.init();
    </script>
  
}




